apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "search.fullname" . }}-ingester"
  labels:
    {{- include "search.labels" . | nindent 4 }}
spec:
  replicas: 1 # DO NOT change this value, benthos does not tolerate scaling
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "search.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "search.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "search.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: "{{ include "search.fullname" . }}-ingester"
        image: "{{ .Values.ingester.image.repository }}:{{ .Values.ingester.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.ingester.image.pullPolicy }}
        env:
        - name: KAFKA_TOPIC
          value: "{{ .Values.ingester.kafka.topic }}"
        - name: KAFKA_ADDRESS
          value: "{{ .Values.ingester.kafka.address }}"
        - name: KAFKA_VERSION
          value: "{{ .Values.ingester.kafka.version }}"
        - name: KAFKA_CONSUMER_GROUP
          value: "{{ .Values.ingester.kafka.consumerGroup }}"
        - name: OPENSEARCH_URL
          value: "{{ .Values.ingester.opensearch.url }}"
        - name: OPENSEARCH_INDEX
          value: "{{ .Values.ingester.opensearch.index }}"
        - name: OPENSEARCH_TLS_ENABLED
          value: "{{ .Values.ingester.opensearch.tlsEnabled }}"
        - name: OPENSEARCH_TLS_SKIP_CERT_VERIFY
          value: "{{ .Values.ingester.opensearch.tlsSkipCertVerify }}"
        - name: OPENSEARCH_BASIC_AUTH_ENABLED
          value: "{{ .Values.ingester.opensearch.basicAuthEnabled }}"
        livenessProbe:
          httpGet:
            path: /_healthcheck
            port: search
        readinessProbe:
          httpGet:
            path: /_healthcheck
            port: search
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
      - name: wait-for-search
        image: bitnami/kubectl
        args:
          - wait
          - "deployment/{{ include "search.fullname" . }}"
          - --for=condition=ready
          - --timeout=120s
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
