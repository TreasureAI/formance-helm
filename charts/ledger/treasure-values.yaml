# Default values for ledger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/numary/ledger
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.5.0"

ledger:
  httpBindAddr: "0.0.0.0:3068"
#  UIHttpBindAddr: "0.0.0.0:3078"
  login: "ledger:ledger"
  storage:
    driver: "postgres"
    connString: "postgresql://ledger:ledger@127.0.0.1/ledger"
  lock:
    strategy: "memory" # memory or redis
    tls: false
    connString: "redis://redis:6379/0"

imagePullSecrets:
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "workload-identity-ksa"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 3
  targetCPUUtilizationPercentage: 60
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - ledger
        topologyKey: kubernetes.io/hostname

gkeCloudSql:
  enabled: true
  dbhost: "tn-mvp-staging:us-central1:staging-upgraded=tcp:5432"
  repository: /gce-proxy:gcr.io/cloudsql-docker
  pullPolicy: IfNotPresent
  tag: 1.30.0
  gkeresources:
    requests:
      memory: 250Mi
      cpu: 100m
    limits:
      memory: 500Mi
      cpu: 150m
  secrets:
    - name: PG_HOST
      value: 127.0.0.1
    - name: PG_USER
      valueFrom:
        secretKeyRef:
          key: user
          name: db-creds
    - name: PG_PASSWORD
      valueFrom:
        secretKeyRef:
          key: pass
          name: db-creds
